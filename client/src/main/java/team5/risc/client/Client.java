/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package team5.risc.client;

import team5.risc.common.Map;

import java.net.*;
import java.io.*;
import java.nio.*;

import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.Selector;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.ThreadPoolExecutor;
import java.io.PrintWriter;

public class Client {

  public static void main(String[] args) throws UnknownHostException, IOException, ClassNotFoundException {
    Socket client = new Socket("127.0.0.1", 1651);
    System.out.println(client.getRemoteSocketAddress());
    OutputStream outToServer = client.getOutputStream();
    DataOutputStream out = new DataOutputStream(outToServer);

    out.writeBytes("Hello from " + client.getLocalSocketAddress());
    InputStream is = client.getInputStream();
    ObjectInputStream inputStream = new ObjectInputStream(is);
    DataInputStream dataStream = new DataInputStream(is);
    
    Map map = (Map) inputStream.readObject();
    int id = (int) dataStream.readInt();

    //Display adjaceny information
    ArrayList<String> areas = map.getAreaString(id);
    ArrayList<ArrayList<String>> neighbors = map.getNeighbors(id);
    for(int i = 0; i < areas.size(); i++){
      System.out.println(areas.get(i) + "(next to: ");
      ArrayList<String> currentNeighbors = neighbors.get(i);
      for(int j = 0; j < currentNeighbors.size(); j++){
        System.out.print(currentNeighbors.get(j));
        if(j != currentNeighbors.size() - 1){
          System.out.print(", ");
        }
      }
      System.out.print(" )");
    }
    
    inputStream.close();
    dataStream.close();
    out.close();
    outToServer.close();
    is.close();
    client.close();

    System.out.println("id :" + id + "\n");
    System.out.println(map.getAreasName());
    System.out.println(map.getRegions());
    
  }
}


  // public void displayAdjacentInformation(Map map, int id){
  //   ArrayList<String> areas = map.getAreas(id);
  //   ArrayList<ArrayList<String>> neighbors = map.getNeighbors(id);
  //   for(int i = 0; i < areas.size(); i++){
  //     System.out.println(areas.get(i) + "(next to: ");
  //     ArrayList<String> currentNeighbors = neighbors.get(i);
  //     for(int j = 0; j < currentNeighbors.size(); j++){
  //       System.out.print(currentNeighbors.get(j));
  //       if(j != currentNeighbors.size() - 1){
  //         System.out.print(", ");
  //       }
  //     }
  //     System.out.print(" )");
  //   }
  // }